<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ca.simplestep</groupId>
    <artifactId>sample-jgitflow</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <properties>
        <kevinIsCool>true</kevinIsCool>
        <jgitflow.version>1.0-m5.1</jgitflow.version>
        <pushFeatures>false</pushFeatures>
        <pushReleases>true</pushReleases>
        <pushHotfixes>true</pushHotfixes>
    </properties>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>${jgitflow.version}</version>
                <configuration>
                    <!-- Enable this to push to origin using SSH keys -->
                    <enableSshAgent>true</enableSshAgent>
                    <!-- Whether to turn off project building. If true the project will NOT
                                 be built during release finish -->
                    <noReleaseBuild>true</noReleaseBuild>
                    <!-- Pushing in-development features to origin allows all devs to see
                                        what each other are working on -->
                    <pushFeatures>${pushFeatures}</pushFeatures>
                    <!-- This allows the CI server (e.g. Jenkins) to automatically push
                                        new releases to origin; you can then either manually deploy them or, if you
                                        are doing Continuous Deployments, auto-deploy them to prod -->
                    <pushReleases>${pushReleases}</pushReleases>
                    <!-- Hot Fixes should be pushed to origin as well so that any dev can
                                        pick them up -->
                    <pushHotfixes>${pushHotfixes}</pushHotfixes>
                    <!-- Prevents deployments from dev workstations so that they can be
                                        done by a CI server -->
                    <noDeploy>true</noDeploy>
                    <!-- The message prefix to use for all SCM changes. -->
                    <scmCommentPrefix>[jgit-flow]
                    </scmCommentPrefix>
                    <!-- Whether to use the release profile that adds sources and javadocs
                                        to the released artifact, if appropriate. If set to true, the plugin sets
                                        the property "performRelease" to true, which activates the profile "release-profile",
                                        which is inherited from the super pom. -->
                    <useReleaseProfile>false</useReleaseProfile>
                    <pullDevelop>true</pullDevelop>
                    <pullMaster>true</pullMaster>
                    <flowInitContext>
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>develop</developBranchName>
                        <featureBranchPrefix>feature-</featureBranchPrefix>
                        <releaseBranchPrefix>release-</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
